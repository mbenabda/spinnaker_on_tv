// GET /applications/hotelavailabilities/pipelineConfigs
[{
        "appConfig": {},
        "application": "hotelavailabilities",
        "id": "d6fd4103-e2bf-426c-9892-8ac26527fb48",
        "index": 0,
        "keepWaitingPipelines": false,
        "lastModifiedBy": "anonymous",
        "limitConcurrent": true,
        "name": "Deploy UNSTABLE artifact to DEV",
        "notifications": [{
            "address": "dev_supply_ci",
            "level": "pipeline",
            "message": {
                "pipeline.complete": {
                    "text": "Awesome ! version ${trigger['tag']} is deployed !"
                },
                "pipeline.failed": {
                    "text": "Deployment of version ${trigger['tag']} failed"
                },
                "pipeline.starting": {
                    "text": "Deploying version ${trigger['tag']}"
                }
            },
            "type": "slack",
            "when": [
                "pipeline.starting",
                "pipeline.complete",
                "pipeline.failed"
            ]
        }],
        "stages": [{
            "clusters": [{
                "account": "dev",
                "application": "hotelavailabilities",
                "cloudProvider": "kubernetes",
                "containers": [{
                    "args": [],
                    "command": [],
                    "envVars": [{
                            "name": "RABBITMQ_HOST",
                            "value": "rabbitmq-service"
                        },
                        {
                            "name": "RABBITMQ_PORT",
                            "value": "5672"
                        },
                        {
                            "name": "RABBITMQ_VHOST",
                            "value": "/"
                        },
                        {
                            "envSource": {
                                "secretSource": {
                                    "key": "username",
                                    "secretName": "rabbitmq-secret"
                                }
                            },
                            "name": "RABBITMQ_USERNAME"
                        },
                        {
                            "envSource": {
                                "secretSource": {
                                    "key": "password",
                                    "secretName": "rabbitmq-secret"
                                }
                            },
                            "name": "RABBITMQ_PASSWORD"
                        }
                    ],
                    "imageDescription": {
                        "account": "private-registry",
                        "fromTrigger": true,
                        "imageId": "docker.weekendesk.com:5000/hotel-availabilities-ingestion:.*-unstable[0-9]+-.+",
                        "registry": "docker.weekendesk.com:5000",
                        "repository": "hotel-availabilities-ingestion",
                        "tag": ".*-unstable[0-9]+-.+"
                    },
                    "imagePullPolicy": "ALWAYS",
                    "limits": {},
                    "livenessProbe": {
                        "failureThreshold": 3,
                        "handler": {
                            "execAction": {
                                "commands": []
                            },
                            "httpGetAction": {
                                "path": "/health",
                                "port": 8080,
                                "uriScheme": "HTTP"
                            },
                            "tcpSocketAction": {
                                "port": 80
                            },
                            "type": "HTTP"
                        },
                        "initialDelaySeconds": 16,
                        "periodSeconds": 30,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                    },
                    "name": "hotel-availabilities-ingestion",
                    "ports": [{
                        "containerPort": 8080,
                        "name": "http",
                        "protocol": "TCP"
                    }],
                    "readinessProbe": {
                        "failureThreshold": 3,
                        "handler": {
                            "execAction": {
                                "commands": []
                            },
                            "httpGetAction": {
                                "path": "/health",
                                "port": 8080,
                                "uriScheme": "HTTP"
                            },
                            "tcpSocketAction": {
                                "port": 80
                            },
                            "type": "HTTP"
                        },
                        "initialDelaySeconds": 15,
                        "periodSeconds": 5,
                        "successThreshold": 1,
                        "timeoutSeconds": 1
                    },
                    "requests": {},
                    "volumeMounts": []
                }],
                "dnsPolicy": "ClusterFirst",
                "events": [],
                "interestingHealthProviderNames": [
                    "KubernetesContainer",
                    "KubernetesPod"
                ],
                "loadBalancers": [
                    "hotelavailabilities"
                ],
                "namespace": "dev",
                "nodeSelector": {},
                "podAnnotations": {},
                "provider": "kubernetes",
                "region": "dev",
                "replicaSetAnnotations": {},
                "securityGroups": [],
                "strategy": "highlander",
                "targetSize": 1,
                "terminationGracePeriodSeconds": 30,
                "volumeSources": []
            }],
            "name": "Deploy",
            "refId": "1",
            "requisiteStageRefIds": [],
            "type": "deploy"
        }],
        "triggers": [{
            "account": "private-registry",
            "enabled": true,
            "registry": "docker.weekendesk.com:5000",
            "repository": "hotel-availabilities-ingestion",
            "tag": ".*-unstable[0-9]+-.+",
            "type": "docker"
        }],
        "updateTs": "1507217693000"
    },
    {
        "appConfig": {},
        "application": "hotelavailabilities",
        "id": "8bf9d497-16bf-4f31-b756-41a0be4ec6e7",
        "index": 1,
        "keepWaitingPipelines": false,
        "lastModifiedBy": "anonymous",
        "limitConcurrent": true,
        "name": "Deploy  RELEASE_CANDIDATE artifact to TEST",
        "notifications": [{
            "address": "dev_supply_ci",
            "level": "pipeline",
            "message": {
                "pipeline.complete": {
                    "text": "Awesome ! version ${trigger['tag']} is deployed !"
                },
                "pipeline.failed": {
                    "text": "Deployment of version ${trigger['tag']} failed"
                },
                "pipeline.starting": {
                    "text": "Deploying version ${trigger['tag']}"
                }
            },
            "type": "slack",
            "when": [
                "pipeline.starting",
                "pipeline.complete",
                "pipeline.failed"
            ]
        }],
        "stages": [{
                "clusters": [{
                    "account": "test",
                    "application": "hotelavailabilities",
                    "cloudProvider": "kubernetes",
                    "containers": [{
                        "args": [],
                        "command": [],
                        "envVars": [{
                                "name": "RABBITMQ_HOST",
                                "value": "rabbitmq-service"
                            },
                            {
                                "name": "RABBITMQ_PORT",
                                "value": "5672"
                            },
                            {
                                "name": "RABBITMQ_VHOST",
                                "value": "/"
                            },
                            {
                                "envSource": {
                                    "secretSource": {
                                        "key": "username",
                                        "secretName": "rabbitmq-secret"
                                    }
                                },
                                "name": "RABBITMQ_USERNAME"
                            },
                            {
                                "envSource": {
                                    "secretSource": {
                                        "key": "password",
                                        "secretName": "rabbitmq-secret"
                                    }
                                },
                                "name": "RABBITMQ_PASSWORD"
                            }
                        ],
                        "imageDescription": {
                            "account": "private-registry",
                            "fromTrigger": true,
                            "imageId": "docker.weekendesk.com:5000/hotel-availabilities-ingestion:.*-rc?[0-9]+-.*",
                            "registry": "docker.weekendesk.com:5000",
                            "repository": "hotel-availabilities-ingestion",
                            "tag": ".*-rc?[0-9]+-.*"
                        },
                        "imagePullPolicy": "ALWAYS",
                        "limits": {},
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "handler": {
                                "execAction": {
                                    "commands": []
                                },
                                "httpGetAction": {
                                    "path": "/health",
                                    "port": 8080,
                                    "uriScheme": "HTTP"
                                },
                                "tcpSocketAction": {
                                    "port": 80
                                },
                                "type": "HTTP"
                            },
                            "initialDelaySeconds": 16,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "hotel-availabilities-ingestion",
                        "ports": [{
                            "containerPort": 8080,
                            "name": "http",
                            "protocol": "TCP"
                        }],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "handler": {
                                "execAction": {
                                    "commands": []
                                },
                                "httpGetAction": {
                                    "path": "/health",
                                    "port": 8080,
                                    "uriScheme": "HTTP"
                                },
                                "tcpSocketAction": {
                                    "port": 80
                                },
                                "type": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "requests": {},
                        "volumeMounts": []
                    }],
                    "dnsPolicy": "ClusterFirst",
                    "events": [],
                    "interestingHealthProviderNames": [
                        "KubernetesContainer",
                        "KubernetesPod"
                    ],
                    "loadBalancers": [
                        "hotelavailabilities"
                    ],
                    "namespace": "test",
                    "nodeSelector": {},
                    "podAnnotations": {},
                    "provider": "kubernetes",
                    "region": "test",
                    "replicaSetAnnotations": {},
                    "securityGroups": [],
                    "strategy": "highlander",
                    "targetSize": 1,
                    "terminationGracePeriodSeconds": 30,
                    "volumeSources": []
                }],
                "name": "Deploy",
                "refId": "1",
                "requisiteStageRefIds": [],
                "type": "deploy"
            },
            {
                "failPipeline": true,
                "instructions": "Continue if this version COMPLIES with the quality requirements",
                "judgmentInputs": [],
                "name": "Validate release candidate",
                "notifications": [{
                    "address": "dev_supply",
                    "level": "stage",
                    "type": "slack",
                    "when": [
                        "manualJudgment",
                        "manualJudgmentContinue",
                        "manualJudgmentStop"
                    ]
                }],
                "refId": "2",
                "requisiteStageRefIds": [
                    "1"
                ],
                "sendNotifications": true,
                "type": "manualJudgment"
            }
        ],
        "triggers": [{
            "account": "private-registry",
            "enabled": true,
            "registry": "docker.weekendesk.com:5000",
            "repository": "hotel-availabilities-ingestion",
            "tag": ".*-rc?[0-9]+-.*",
            "type": "docker"
        }],
        "updateTs": "1507284779000"
    },
    {
        "appConfig": {},
        "application": "hotelavailabilities",
        "id": "4b451278-849a-4649-a1cd-3d9accb32df1",
        "index": 2,
        "keepWaitingPipelines": false,
        "lastModifiedBy": "anonymous",
        "limitConcurrent": true,
        "name": "Deploy RELEASE artifact to PREPROD",
        "notifications": [{
            "address": "dev_supply_ci",
            "level": "pipeline",
            "message": {
                "pipeline.complete": {
                    "text": "Awesome ! version ${trigger['tag']} is deployed !"
                },
                "pipeline.failed": {
                    "text": "Deployment of version ${trigger['tag']} failed"
                },
                "pipeline.starting": {
                    "text": "Deploying version ${trigger['tag']}"
                }
            },
            "type": "slack",
            "when": [
                "pipeline.starting",
                "pipeline.complete",
                "pipeline.failed"
            ]
        }],
        "stages": [{
                "clusters": [{
                    "account": "preprod",
                    "application": "hotelavailabilities",
                    "cloudProvider": "kubernetes",
                    "containers": [{
                        "args": [],
                        "command": [],
                        "envVars": [{
                                "name": "RABBITMQ_HOST",
                                "value": "rabbitmq-service"
                            },
                            {
                                "name": "RABBITMQ_PORT",
                                "value": "5672"
                            },
                            {
                                "name": "RABBITMQ_VHOST",
                                "value": "/"
                            },
                            {
                                "envSource": {
                                    "secretSource": {
                                        "key": "username",
                                        "secretName": "rabbitmq-secret"
                                    }
                                },
                                "name": "RABBITMQ_USERNAME"
                            },
                            {
                                "envSource": {
                                    "secretSource": {
                                        "key": "password",
                                        "secretName": "rabbitmq-secret"
                                    }
                                },
                                "name": "RABBITMQ_PASSWORD"
                            }
                        ],
                        "imageDescription": {
                            "account": "private-registry",
                            "fromTrigger": true,
                            "imageId": "docker.weekendesk.com:5000/hotel-availabilities-ingestion:.*-r[0-9]+-.*",
                            "registry": "docker.weekendesk.com:5000",
                            "repository": "hotel-availabilities-ingestion",
                            "tag": ".*-r[0-9]+-.*"
                        },
                        "imagePullPolicy": "ALWAYS",
                        "limits": {},
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "handler": {
                                "execAction": {
                                    "commands": []
                                },
                                "httpGetAction": {
                                    "path": "/health",
                                    "port": 8080,
                                    "uriScheme": "HTTP"
                                },
                                "tcpSocketAction": {
                                    "port": 80
                                },
                                "type": "HTTP"
                            },
                            "initialDelaySeconds": 16,
                            "periodSeconds": 29,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "hotel-availabilities-ingestion",
                        "ports": [{
                            "containerPort": 8080,
                            "name": "http",
                            "protocol": "TCP"
                        }],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "handler": {
                                "execAction": {
                                    "commands": []
                                },
                                "httpGetAction": {
                                    "path": "/health",
                                    "port": 8080,
                                    "uriScheme": "HTTP"
                                },
                                "tcpSocketAction": {
                                    "port": 80
                                },
                                "type": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "requests": {},
                        "volumeMounts": []
                    }],
                    "dnsPolicy": "ClusterFirst",
                    "events": [],
                    "interestingHealthProviderNames": [
                        "KubernetesContainer",
                        "KubernetesPod"
                    ],
                    "loadBalancers": [
                        "hotelavailabilities"
                    ],
                    "namespace": "preprod",
                    "nodeSelector": {},
                    "podAnnotations": {},
                    "provider": "kubernetes",
                    "region": "preprod",
                    "replicaSetAnnotations": {},
                    "securityGroups": [],
                    "strategy": "highlander",
                    "targetSize": 1,
                    "terminationGracePeriodSeconds": 30,
                    "volumeSources": []
                }],
                "name": "Deploy",
                "refId": "1",
                "requisiteStageRefIds": [],
                "type": "deploy"
            },
            {
                "failPipeline": true,
                "instructions": "Continue if this version COMPLIES with the quality requirements",
                "judgmentInputs": [],
                "name": "Validate release",
                "notifications": [{
                    "address": "dev_supply",
                    "level": "stage",
                    "type": "slack",
                    "when": [
                        "manualJudgment",
                        "manualJudgmentContinue",
                        "manualJudgmentStop"
                    ]
                }],
                "refId": "2",
                "requisiteStageRefIds": [
                    "3"
                ],
                "sendNotifications": true,
                "type": "manualJudgment"
            },
            {
                "account": "preprod",
                "annotations": {},
                "application": "hotelavailabilities",
                "cloudProvider": "kubernetes",
                "cloudProviderType": "kubernetes",
                "container": {
                    "args": [
                        "-s",
                        "CloseDepartureTest"
                    ],
                    "command": [],
                    "envVars": [{
                        "name": "AVAILABILITIES_ENDPOINT_BASE_URL",
                        "value": "http://hotelavailabilities/"
                    }],
                    "imageDescription": {
                        "account": "private-registry",
                        "fromTrigger": false,
                        "registry": "docker.weekendesk.com:5000",
                        "repository": "hotel-availabilities-ingestion-test-perf",
                        "tag": "${trigger['tag']}"
                    },
                    "name": "${trigger['image']}_${trigger['tag']}_stress_tests",
                    "volumeMounts": []
                },
                "dnsPolicy": "ClusterFirst",
                "labels": {},
                "name": "Stress test",
                "namespace": "preprod",
                "refId": "3",
                "requisiteStageRefIds": [
                    "1"
                ],
                "type": "runJob",
                "volumeSources": []
            }
        ],
        "triggers": [{
            "account": "private-registry",
            "enabled": true,
            "registry": "docker.weekendesk.com:5000",
            "repository": "hotel-availabilities-ingestion",
            "tag": ".*-r[0-9]+-.*",
            "type": "docker"
        }],
        "updateTs": "1507284833000"
    }
]